package drools.rules;

import com.cor.backend.model.dto.PlayerDTO;
import com.cor.backend.service.RecommendedService;
import com.cor.backend.model.enums.PlayerDifficulty;
import java.util.ArrayList;

global java.util.ArrayList bookTitles;

agenda-group "recommended-for-player-type"

rule "Initialize bookTitles" salience 100
    no-loop
    when
    then
        bookTitles = new ArrayList();
        drools.getWorkingMemory().setGlobal("bookTitles", bookTitles);
end

rule "Set beginner aggressive recommended"
    no-loop
    when
        $pdto: PlayerDTO(playerType == PlayerType.AGGRESSIVE && playerDifficulty == PlayerDifficulty.BEGINNER);
        $recommendedService: RecommendedService();
    then
        bookTitles.add("The Life and Games of Mikhail Tal");
        bookTitles.add("How to Attack in Chess");
        bookTitles.add("Winning Chess Combinations");
        $pdto.setRecommended($recommendedService.getRecommendedForPlayerType(PlayerType.AGGRESSIVE, bookTitles));
        update($pdto);
end

rule "Set beginner tactical recommended"
    no-loop
    when
        $pdto: PlayerDTO(playerType == PlayerType.TACTICAL && playerDifficulty == PlayerDifficulty.BEGINNER);
        $recommendedService: RecommendedService();
    then
        bookTitles.add("Winning Chess Combinations");
        bookTitles.add("Bobby Fischer Teaches Chess");
        bookTitles.add("A First Book of Morphy");
        $pdto.setRecommended($recommendedService.getRecommendedForPlayerType(PlayerType.TACTICAL, bookTitles));
        update($pdto);
end

rule "Set beginner defensive recommended"
    no-loop
    when
        $pdto: PlayerDTO(playerType == PlayerType.DEFENSIVE && playerDifficulty == PlayerDifficulty.BEGINNER);
        $recommendedService: RecommendedService();
    then
        bookTitles.add("The Art of Defence in Chess");
        bookTitles.add("The Art of Positional Play");
        bookTitles.add("Bobby Fischer Teaches Chess");
        $pdto.setRecommended($recommendedService.getRecommendedForPlayerType(PlayerType.DEFENSIVE, bookTitles));
        update($pdto);
end

rule "Set beginner positional recommended"
    no-loop
    when
        $pdto: PlayerDTO(playerType == PlayerType.POSITIONAL && playerDifficulty == PlayerDifficulty.BEGINNER);
        $recommendedService: RecommendedService();
    then
        bookTitles.add("Winning Chess Combinations");
        bookTitles.add("The Art of Positional Play");
        bookTitles.add("My System");
        $pdto.setRecommended($recommendedService.getRecommendedForPlayerType(PlayerType.POSITIONAL, bookTitles));
        update($pdto);
end

rule "Set intermediate aggressive recommended"
    no-loop
    when
        $pdto: PlayerDTO(playerType == PlayerType.AGGRESSIVE && playerDifficulty == PlayerDifficulty.INTERMEDIATE);
        $recommendedService: RecommendedService();
    then
        bookTitles.add("The Life and Games of Mikhail Tal");
        bookTitles.add("Endgame Strategy");
        bookTitles.add("How to Reassess Your Chess: The Complete Chess Mastery Course");
        $pdto.setRecommended($recommendedService.getRecommendedForPlayerType(PlayerType.AGGRESSIVE, bookTitles));
        update($pdto);
end

rule "Set intermediate tactical recommended"
    no-loop
    when
        $pdto: PlayerDTO(playerType == PlayerType.TACTICAL && playerDifficulty == PlayerDifficulty.INTERMEDIATE);
        $recommendedService: RecommendedService();
    then
        bookTitles.add("How to Attack in Chess");
        bookTitles.add("Chess Training Pocket Book: 300 Most Important Positions and Ideas");
        bookTitles.add("Chess Tactics for Advanced Players");
        $pdto.setRecommended($recommendedService.getRecommendedForPlayerType(PlayerType.TACTICAL, bookTitles));
        update($pdto);
end

rule "Set intermediate defensive recommended"
    no-loop
    when
        $pdto: PlayerDTO(playerType == PlayerType.DEFENSIVE && playerDifficulty == PlayerDifficulty.INTERMEDIATE);
        $recommendedService: RecommendedService();
    then
        bookTitles.add("The Art of Defence in Chess");
        bookTitles.add("Secrets of Chess Defence");
        bookTitles.add("Endgame Strategy");
        $pdto.setRecommended($recommendedService.getRecommendedForPlayerType(PlayerType.DEFENSIVE, bookTitles));
        update($pdto);
end

rule "Set intermediate positional recommended"
    no-loop
    when
        $pdto: PlayerDTO(playerType == PlayerType.POSITIONAL && playerDifficulty == PlayerDifficulty.INTERMEDIATE);
        $recommendedService: RecommendedService();
    then
        bookTitles.add("My System");
        bookTitles.add("How to Reassess Your Chess: The Complete Chess Mastery Course");
        bookTitles.add("Chess Strategy for Club Players");
        $pdto.setRecommended($recommendedService.getRecommendedForPlayerType(PlayerType.POSITIONAL, bookTitles));
        update($pdto);
end

rule "Set advanced aggressive recommended"
    no-loop
    when
        $pdto: PlayerDTO(playerType == PlayerType.AGGRESSIVE && playerDifficulty == PlayerDifficulty.ADVANCED);
        $recommendedService: RecommendedService();
    then
        bookTitles.add("Endgame Strategy");
        bookTitles.add("Dvoretsky's Endgame Manual");
        bookTitles.add("Attacking Manual Volume 1");
        $pdto.setRecommended($recommendedService.getRecommendedForPlayerType(PlayerType.AGGRESSIVE, bookTitles));
        update($pdto);
end

rule "Set advanced tactical recommended"
    no-loop
    when
        $pdto: PlayerDTO(playerType == PlayerType.TACTICAL && playerDifficulty == PlayerDifficulty.ADVANCED);
        $recommendedService: RecommendedService();
    then
        bookTitles.add("Chess Tactics for Advanced Players");
        bookTitles.add("Dvoretsky's Endgame Manual");
        bookTitles.add("Endgame Strategy");
        $pdto.setRecommended($recommendedService.getRecommendedForPlayerType(PlayerType.TACTICAL, bookTitles));
        update($pdto);
end

rule "Set advanced defensive recommended"
    no-loop
    when
        $pdto: PlayerDTO(playerType == PlayerType.DEFENSIVE && playerDifficulty == PlayerDifficulty.ADVANCED);
        $recommendedService: RecommendedService();
    then
        bookTitles.add("Endgame Strategy");
        bookTitles.add("Secrets of Chess Defence");
        bookTitles.add("Dvoretsky's Endgame Manual");
        $pdto.setRecommended($recommendedService.getRecommendedForPlayerType(PlayerType.DEFENSIVE, bookTitles));
        update($pdto);
end

rule "Set advanced positional recommended"
    no-loop
    when
        $pdto: PlayerDTO(playerType == PlayerType.POSITIONAL && playerDifficulty == PlayerDifficulty.ADVANCED);
        $recommendedService: RecommendedService();
    then
        bookTitles.add("Positional Chess Handbook");
        bookTitles.add("Dvoretsky's Endgame Manual");
        bookTitles.add("The Complete Manual of Positional Chess: Opening and Middlegame");
        $pdto.setRecommended($recommendedService.getRecommendedForPlayerType(PlayerType.POSITIONAL, bookTitles));
        update($pdto);
end