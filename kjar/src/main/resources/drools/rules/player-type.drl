package drools.rules;

import com.cor.backend.model.Player;
import com.cor.backend.model.CountItem;
import com.cor.backend.model.enums.PlayerType;
import java.util.Collections;
import java.util.List;



agenda-group "player-type"

rule "Determine player type" salience -1
    lock-on-active
    when
        $p: Player()
    then
        $p.setPlayerType($p.getMaxCountItem().getPlayerType());
        update($p);
end

rule "Increment aggressive count"
    no-loop
    when
        $p: Player();
        $numAggressive: Number() from accumulate (
            String( toString == "AGGRESSIVE") from $p.getChosenMoveTypes(),
            count("AGGRESSIVE")
        )
    then
        $p.setAggressiveCountValue($numAggressive.intValue());
        update($p);

end

rule "Increment tactical count"
    no-loop
    when
        $p: Player();
        $numTactical: Number() from accumulate (
            String( toString == "TACTICAL") from $p.getChosenMoveTypes(),
            count("TACTICAL")
        )
    then
        $p.setTacticalCountValue($numTactical.intValue());
        update($p);
end

rule "Increment positional count"
    no-loop
    when
        $p: Player();
        $numPositional: Number() from accumulate (
            String( toString == "POSITIONAL") from $p.getChosenMoveTypes(),
            count("POSITIONAL")
        )
    then
        $p.setPositionalCountValue($numPositional.intValue());
        update($p);
end

rule "Increment defensive count"
    no-loop
    when
        $p: Player();
        $numDefensive: Number() from accumulate (
            String( toString == "DEFENSIVE") from $p.getChosenMoveTypes(),
            count("DEFENSIVE")
        )
    then
        $p.setDefensiveCountValue($numDefensive.intValue());
        update($p);
end
